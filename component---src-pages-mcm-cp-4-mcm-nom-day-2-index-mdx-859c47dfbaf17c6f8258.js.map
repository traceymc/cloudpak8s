{"version":3,"sources":["webpack:///./src/pages/mcm/cp4mcm_nom_day2/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2eAMO,IAAMA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,sBAAI,sBAAQC,WAAW,MAAnB,iBACJ,2cAII,kBAAIA,WAAW,KAAf,qBAJJ,mFAKA,+DACA,iBAAQ,CACN,UAAa,sBAEb,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBAEb,iBAAGA,WAAW,MAAK,uBAAOA,WAAW,KAAQ,CACzC,KAAQ,WACR,SAAW,EACX,UAAY,KAHhB,IAIkB,mBAAGA,WAAW,KAAQ,CACpC,KAAQ,4CADM,mCAIpB,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBAEb,iBAAGA,WAAW,MAAK,uBAAOA,WAAW,KAAQ,CACzC,KAAQ,WACR,SAAW,EACX,UAAY,KAHhB,IAIkB,mBAAGA,WAAW,KAAQ,CACpC,KAAQ,0CADM,+DAKtB,yDACA,iBAAQ,CACN,UAAa,sBAEb,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBAEb,iBAAGA,WAAW,MAAK,uBAAOA,WAAW,KAAQ,CACzC,KAAQ,WACR,SAAW,EACX,UAAY,KAHhB,IAIkB,mBAAGA,WAAW,KAAQ,CACpC,KAAQ,wGADM,0DAJlB,uEAO2D,sBAAQA,WAAW,KAAnB,2BAP3D,yHASF,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBAEb,iBAAGA,WAAW,MAAK,uBAAOA,WAAW,KAAQ,CACzC,KAAQ,WACR,SAAW,EACX,UAAY,KAHhB,IAIkB,mBAAGA,WAAW,KAAQ,CACpC,KAAQ,yFADM,8CAJlB,yIAO6H,sBAAQA,WAAW,KAAnB,SAP7H,aASF,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBAEb,iBAAGA,WAAW,MAAK,uBAAOA,WAAW,KAAQ,CACzC,KAAQ,WACR,SAAW,EACX,UAAY,KAHhB,IAIkB,mBAAGA,WAAW,KAAQ,CACpC,KAAQ,yGADM,6DAJlB,+GASF,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBAEb,iBAAGA,WAAW,MAAK,uBAAOA,WAAW,KAAQ,CACzC,KAAQ,WACR,SAAW,EACX,UAAY,KAHhB,IAIkB,mBAAGA,WAAW,KAAQ,CACpC,KAAQ,8GADM,oEAJlB,qJAcRJ,EAAWK,gBAAiB","file":"component---src-pages-mcm-cp-4-mcm-nom-day-2-index-mdx-859c47dfbaf17c6f8258.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2><strong parentName=\"h2\">{`Introduction`}</strong></h2>\n    <p>{`The Netcool Ops Manager has been designed and installed; initial configuration had been performed.\nWhat is next? The application now needs to be further configured to provide value to the user.\nThe Agile Service Manager’s Observer now needs to be configured to start importing the topology from the manages system, for example.\nThese further configurations after the initial configuration are referred to as day2 activities.\nIt is `}<em parentName=\"p\">{`business as usual`}</em>{` for the application. It might also involve troubleshooting application issues.`}</p>\n    <h2>{`Agile Service Manager Day-2 Operation`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": false,\n            \"disabled\": true\n          }}></input>{` `}<a parentName=\"p\" {...{\n            \"href\": \"/mcm/cp4mcm_nom_day2/asm_day2_fromEvent\"\n          }}>{`Creating Topology from Alerts`}</a></p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": false,\n            \"disabled\": true\n          }}></input>{` `}<a parentName=\"p\" {...{\n            \"href\": \"/mcm/cp4mcm_nom_day2/asm_day2_vCenter\"\n          }}>{`Troubleshooting a REST based Observer - vCenter Observer`}</a></p>\n      </li>\n    </ul>\n    <h2>{`Articles and Blogs on ASM day-2`}</h2>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": false,\n            \"disabled\": true\n          }}></input>{` `}<a parentName=\"p\" {...{\n            \"href\": \"https://medium.com/@ibmmattdugg/finding-your-weak-spots-with-ibm-agile-service-manager-3d4c5c6d0e55\"\n          }}>{`Finding your weak spots with IBM Agile Service Manager`}</a>{`.\nThis blog describes how to configure ASM to display a topology’s `}<strong parentName=\"p\">{`single-point-of-failure`}</strong>{`.  A single-point-of-failure, if removed, will cause the topology to split into two or more disconnected components.`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": false,\n            \"disabled\": true\n          }}></input>{` `}<a parentName=\"p\" {...{\n            \"href\": \"https://medium.com/@ibmjdiaz/using-merge-rules-in-agile-service-manager-b66b36707b1c\"\n          }}>{`Using Merge Rules in Agile Service Manager`}</a>{`.\nASM can merge or combine the topology from different observers.  This blog explains and provides examples of how you can perform a `}<strong parentName=\"p\">{`merge`}</strong>{` in ASM.`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": false,\n            \"disabled\": true\n          }}></input>{` `}<a parentName=\"p\" {...{\n            \"href\": \"https://medium.com/ibm-garage/topology-modelling-using-agile-service-manager-a-tutorial-2e521040ea64\"\n          }}>{`Topology Modeling using Agile Service Manager: A tutorial`}</a>{`.\nThis blog is a tutorial on building a topology model using the Agile Service Manager using a text file.`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": false,\n            \"disabled\": true\n          }}></input>{` `}<a parentName=\"p\" {...{\n            \"href\": \"https://medium.com/ibm-garage/topology-modelling-using-agile-service-managers-rest-interface-7de14a85e333\"\n          }}>{`Building a topology using Agile Service Manager’s REST Interface`}</a>{`.\nThis blog continues the ASM tutorial by showing how you can build a topology by programmatically interacting with the ASM’s REST Interface.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}