{"componentChunkName":"component---src-pages-mcm-monitoring-index-mdx","path":"/mcm/monitoring/","result":{"pageContext":{"frontmatter":{"title":"Enabling Monitoring","description":"Enabling the CP4MCM monitoring component","keywords":"ibm,install,mcm, cp4mcm"},"relativePagePath":"/mcm/monitoring/index.mdx","titleType":"page","MdxNode":{"id":"f7d258eb-a81c-57c4-a50e-87e6d5c880d9","children":[],"parent":"3210370a-ecbb-5b74-8425-5cac2cdd8158","internal":{"content":"---\ntitle: Enabling Monitoring\ndescription: Enabling the CP4MCM monitoring component\nkeywords: 'ibm,install,mcm, cp4mcm'\n---\n\nThis section describes how to enable the monitoring component, after you have completed \ninstalling the core components of Cloud\nPak for Multicloud Management 2.0. The Cloud\nplatform used to test and document the installation here is OpenShift on \nIBM Cloud (ROKS), specifically an OpenShift 4.4 cluster. However, since \nOpenShift 4.3. and 4.4 are available on a variety of platforms, the \ninstructions should be valid on whatever on-premise or cloud platform \nwhere you are running OpenShift supported versions.\n\nThe enablement of monitoring is well documented in the \n[IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/en/SSFC4F_2.0.0/install/monitoring_config.html).\nThe installation process documented there uses a mix of the Openshift UI \nand the command line. \n\nAs an alternative, this section of the Cloud Pak Playbook describes an \ninstallation exclusively using the command line. With this approach, it \nis possible to automate the installation by incorporating these commands\ninto shell scripts.\n\n<InlineNotification>\n\nThe syntax of the\ncommands in this description was correct at the time of writing. \nHowever, command syntax often changes over time for various reasons.\nIf you \nexperience a command syntax error, please check the IBM Knowledge Center\nor Red Hat OpenShift documentation for the latest syntax and adjust \naccordingly. If thtat does\nnot solve the problem, the authors of this section will respond on a best\nefforts basis if you \n[open a github issue](https://github.com/ibm-cloud-architecture/cloudpak8s/issues).\n\n</InlineNotification>\n\n<ul>\n</ul>\n\n<InlineNotification>\n\nThis command line based enablement of the monitoring function is only tested and valid for \nclusters running in an online environment. That is, the cluster has access to the internet.\nFor offline or airgapped installations, these instructions will not apply, and you will have\nto follow the \n[IBM Knowledge Center Monitoring Configuration](https://www.ibm.com/support/knowledgecenter/en/SSFC4F_2.0.0/install/monitoring_config.html)\ndocumentation.\n\n</InlineNotification>\n\n## Set up necessary Environment variables\n\nIf you have just completed the installation of the Cloud Pak for Multicloud Management core\ncomponents, you probably already have these environment variables set in your command line\nenvironment. In any case, you should check to make sure they are defined as described below.\nThe final step in this section defines 2 additional environment variables whose values can\nonly be known after the installation of the core components. Be sure to at least define \nthese variables, if you already have the others defined.\n\n1. Log in to \n[MyIBM Container Software Library](https://myibm.ibm.com/products-services/containerlibrary) \nwith your IBMid and password.\nIn the Entitlement keys section, copy the entitlement key to your buffer.\n\n2. In your command line, paste this entitlement key into an environment variable.\n\n```bash\nexport ENTITLED_REGISTRY_KEY=\"<Paste Your Entitlement Key>\"\n```\n\n3. Define the other environment variables you will need for the core MCM component installation.\n\n```bash\nexport ENTITLED_REGISTRY=\"cp.icr.io\"\nexport ENTITLED_REGISTRY_SECRET=\"ibm-management-pull-secret\"\nexport DOCKER_EMAIL=\"<Your Docker ID email>\"\nexport CP4MCM_NAMESPACE=\"cp4m\"\nexport CP4MCM_BLOCK_STORAGECLASS=\"ibmc-block-gold\"\nexport CP4MCM_FILE_STORAGECLASS=\"ibmc-file-gold\"\nexport CP4MCM_FILE_GID_STORAGECLASS=\"ibmc-file-gold-gid\"\n```\n\nThe value of `ENTITLED_REGISTRY` points to IBM's registry containing the software images. The values\nof the `ENTITLED_REGISTRY_SECRET` and `CP4MCM_NAMESPACE` are arbitrary. You can use different \nvalues if you want. The `...STORAGECLASS` variables are populated based on the storage classes\navailable in the OpenShift cluster. The storage classes you have available will vary based on\nthe platform on which you are running your MCM OpenShift cluster. \nTo find the available storage classes in your cluster, enter \nthe command `oc get sc`.\n\n4. Go to your OpenShift Cluster UI, and log in to your cluster. From the pull-down menu in \nthe top right corner, click `Copy Login Command`, then click `Display Token`. Copy the command\nline under `Log in with this token`, paste it into your command line and Enter to log in to your \ncluster. The command line is in the form:\n\n```bash\noc login --token=<your_token> --server=<SERVER_URL>\n```\n\n5. Define the 2 additional post-install environment variables.\n\n```bash\nexport YOUR_CP4MCM_ROUTE=`oc -n ibm-common-services get route cp-console --template '{{.spec.host}}'`\nexport CP_PASSWORD=`oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 -d`\n```\n\n## Adding the Monitoring Storage Configuration\n\n<InlineNotification>\nFor each of the commands in the following sections, it is recommended to wait a length of\ntime for each of these commands to fully complete before moving on to the next one. From \nour experience, we recommend a wait time of 3 minutes from the return of one command to\nwhen you should enter the next command.\n</InlineNotification>\n\n4. Enter the following command:\n\n```bash\noc patch installation.orchestrator.management.ibm.com ibm-management -n $CP4MCM_NAMESPACE --type=json -p=\"[\n {\"op\": \"test\",\n  \"path\": \"/spec/pakModules/1/name\",\n  \"value\": \"monitoring\" },\n {\"op\": \"replace\",\n  \"path\": \"/spec/pakModules/1/config/0/spec\",\n  \"value\": \n    {\n      \"monitoringDeploy\": {\n        \"cnmonitoringimagesource\": {\n          \"deployMCMResources\": true\n        },\n        \"global\": {\n          \"environmentSize\": size0,\n          \"persistence\": {\n            \"storageClassOption\": {\n              \"cassandrabak\": none,\n              \"cassandradata\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"couchdbdata\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"datalayerjobs\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"elasticdata\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"kafkadata\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"zookeeperdata\": $CP4MCM_BLOCK_STORAGECLASS\n            },\n            \"storageSize\": {\n              \"cassandrabak\": 50Gi,\n              \"cassandradata\": 50Gi,\n              \"couchdbdata\": 5Gi,\n              \"datalayerjobs\": 5Gi,\n              \"elasticdata\": 5Gi,\n              \"kafkadata\": 10Gi,\n              \"zookeeperdata\": 1Gi\n            }\n          }\n        }\n      }\n    }\n  }\n]\"\n```\n\n## Enabling the Monitoring Component\n\n5. Enter the following command.\n\n```bash\noc patch installation.orchestrator.management.ibm.com ibm-management -n $CP4MCM_NAMESPACE --type=json -p='[\n {\"op\": \"test\",\n  \"path\": \"/spec/pakModules/1/name\",\n  \"value\": \"monitoring\" },\n {\"op\": \"replace\",\n  \"path\": \"/spec/pakModules/1/enabled\",\n  \"value\": true }\n]'\n```\n\n\n10. The enablement of the monitoring component will start a number of additional pods. The \ninstallation will be finished when all those additional pods have started successfully. This \ncommand will report these pods that are not yet in the `Running` or `Completed` states yet.\n\n```bash\noc get po --no-headers=true -A | grep -v 'Running\\|Completed\\|gateway-kong' | grep 'kube-system\\|ibm-common-services\\|management-infrastructure-management\\|management-monitoring\\|management-operations\\|management-security-services'\n```\n\n   Do not move on to the next command until all the addtional pods have completed. Keep \n   repeating the command above until the list comes back empty.\n\n## Patching the Monitoring Deployable Secret\n\n11. Enter the following commands.\n\n```bash\nexport ENTITLED_REGISTRY_DOCKERCONFIG=`oc get secret $ENTITLED_REGISTRY_SECRET -n $CP4MCM_NAMESPACE -o jsonpath='{.data.\\.dockerconfigjson}'`\nexeclog oc patch deployable.app.ibm.com/cnmon-pullsecret-deployable -p `echo {\\\"spec\\\":{\\\"template\\\":{\\\"data\\\":{\\\".dockerconfigjson\\\":\\\"$ENTITLED_REGISTRY_DOCKERCONFIG\\\"}}}}` --type merge -n management-monitoring\n```\n\n## Additional Resources\n* <a href=\"https://www.ibm.com/support/knowledgecenter/en/SSFC4F_2.0.0/install/monitoring_config.html\">IBM Knowledge Center - Cloud Pak for MCM 2.0 Monitoring Configuration</a>\n","type":"Mdx","contentDigest":"d38e5fd225474e0a4b58c98b18e23038","counter":559,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Enabling Monitoring","description":"Enabling the CP4MCM monitoring component","keywords":"ibm,install,mcm, cp4mcm"},"exports":{},"rawBody":"---\ntitle: Enabling Monitoring\ndescription: Enabling the CP4MCM monitoring component\nkeywords: 'ibm,install,mcm, cp4mcm'\n---\n\nThis section describes how to enable the monitoring component, after you have completed \ninstalling the core components of Cloud\nPak for Multicloud Management 2.0. The Cloud\nplatform used to test and document the installation here is OpenShift on \nIBM Cloud (ROKS), specifically an OpenShift 4.4 cluster. However, since \nOpenShift 4.3. and 4.4 are available on a variety of platforms, the \ninstructions should be valid on whatever on-premise or cloud platform \nwhere you are running OpenShift supported versions.\n\nThe enablement of monitoring is well documented in the \n[IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/en/SSFC4F_2.0.0/install/monitoring_config.html).\nThe installation process documented there uses a mix of the Openshift UI \nand the command line. \n\nAs an alternative, this section of the Cloud Pak Playbook describes an \ninstallation exclusively using the command line. With this approach, it \nis possible to automate the installation by incorporating these commands\ninto shell scripts.\n\n<InlineNotification>\n\nThe syntax of the\ncommands in this description was correct at the time of writing. \nHowever, command syntax often changes over time for various reasons.\nIf you \nexperience a command syntax error, please check the IBM Knowledge Center\nor Red Hat OpenShift documentation for the latest syntax and adjust \naccordingly. If thtat does\nnot solve the problem, the authors of this section will respond on a best\nefforts basis if you \n[open a github issue](https://github.com/ibm-cloud-architecture/cloudpak8s/issues).\n\n</InlineNotification>\n\n<ul>\n</ul>\n\n<InlineNotification>\n\nThis command line based enablement of the monitoring function is only tested and valid for \nclusters running in an online environment. That is, the cluster has access to the internet.\nFor offline or airgapped installations, these instructions will not apply, and you will have\nto follow the \n[IBM Knowledge Center Monitoring Configuration](https://www.ibm.com/support/knowledgecenter/en/SSFC4F_2.0.0/install/monitoring_config.html)\ndocumentation.\n\n</InlineNotification>\n\n## Set up necessary Environment variables\n\nIf you have just completed the installation of the Cloud Pak for Multicloud Management core\ncomponents, you probably already have these environment variables set in your command line\nenvironment. In any case, you should check to make sure they are defined as described below.\nThe final step in this section defines 2 additional environment variables whose values can\nonly be known after the installation of the core components. Be sure to at least define \nthese variables, if you already have the others defined.\n\n1. Log in to \n[MyIBM Container Software Library](https://myibm.ibm.com/products-services/containerlibrary) \nwith your IBMid and password.\nIn the Entitlement keys section, copy the entitlement key to your buffer.\n\n2. In your command line, paste this entitlement key into an environment variable.\n\n```bash\nexport ENTITLED_REGISTRY_KEY=\"<Paste Your Entitlement Key>\"\n```\n\n3. Define the other environment variables you will need for the core MCM component installation.\n\n```bash\nexport ENTITLED_REGISTRY=\"cp.icr.io\"\nexport ENTITLED_REGISTRY_SECRET=\"ibm-management-pull-secret\"\nexport DOCKER_EMAIL=\"<Your Docker ID email>\"\nexport CP4MCM_NAMESPACE=\"cp4m\"\nexport CP4MCM_BLOCK_STORAGECLASS=\"ibmc-block-gold\"\nexport CP4MCM_FILE_STORAGECLASS=\"ibmc-file-gold\"\nexport CP4MCM_FILE_GID_STORAGECLASS=\"ibmc-file-gold-gid\"\n```\n\nThe value of `ENTITLED_REGISTRY` points to IBM's registry containing the software images. The values\nof the `ENTITLED_REGISTRY_SECRET` and `CP4MCM_NAMESPACE` are arbitrary. You can use different \nvalues if you want. The `...STORAGECLASS` variables are populated based on the storage classes\navailable in the OpenShift cluster. The storage classes you have available will vary based on\nthe platform on which you are running your MCM OpenShift cluster. \nTo find the available storage classes in your cluster, enter \nthe command `oc get sc`.\n\n4. Go to your OpenShift Cluster UI, and log in to your cluster. From the pull-down menu in \nthe top right corner, click `Copy Login Command`, then click `Display Token`. Copy the command\nline under `Log in with this token`, paste it into your command line and Enter to log in to your \ncluster. The command line is in the form:\n\n```bash\noc login --token=<your_token> --server=<SERVER_URL>\n```\n\n5. Define the 2 additional post-install environment variables.\n\n```bash\nexport YOUR_CP4MCM_ROUTE=`oc -n ibm-common-services get route cp-console --template '{{.spec.host}}'`\nexport CP_PASSWORD=`oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 -d`\n```\n\n## Adding the Monitoring Storage Configuration\n\n<InlineNotification>\nFor each of the commands in the following sections, it is recommended to wait a length of\ntime for each of these commands to fully complete before moving on to the next one. From \nour experience, we recommend a wait time of 3 minutes from the return of one command to\nwhen you should enter the next command.\n</InlineNotification>\n\n4. Enter the following command:\n\n```bash\noc patch installation.orchestrator.management.ibm.com ibm-management -n $CP4MCM_NAMESPACE --type=json -p=\"[\n {\"op\": \"test\",\n  \"path\": \"/spec/pakModules/1/name\",\n  \"value\": \"monitoring\" },\n {\"op\": \"replace\",\n  \"path\": \"/spec/pakModules/1/config/0/spec\",\n  \"value\": \n    {\n      \"monitoringDeploy\": {\n        \"cnmonitoringimagesource\": {\n          \"deployMCMResources\": true\n        },\n        \"global\": {\n          \"environmentSize\": size0,\n          \"persistence\": {\n            \"storageClassOption\": {\n              \"cassandrabak\": none,\n              \"cassandradata\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"couchdbdata\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"datalayerjobs\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"elasticdata\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"kafkadata\": $CP4MCM_BLOCK_STORAGECLASS,\n              \"zookeeperdata\": $CP4MCM_BLOCK_STORAGECLASS\n            },\n            \"storageSize\": {\n              \"cassandrabak\": 50Gi,\n              \"cassandradata\": 50Gi,\n              \"couchdbdata\": 5Gi,\n              \"datalayerjobs\": 5Gi,\n              \"elasticdata\": 5Gi,\n              \"kafkadata\": 10Gi,\n              \"zookeeperdata\": 1Gi\n            }\n          }\n        }\n      }\n    }\n  }\n]\"\n```\n\n## Enabling the Monitoring Component\n\n5. Enter the following command.\n\n```bash\noc patch installation.orchestrator.management.ibm.com ibm-management -n $CP4MCM_NAMESPACE --type=json -p='[\n {\"op\": \"test\",\n  \"path\": \"/spec/pakModules/1/name\",\n  \"value\": \"monitoring\" },\n {\"op\": \"replace\",\n  \"path\": \"/spec/pakModules/1/enabled\",\n  \"value\": true }\n]'\n```\n\n\n10. The enablement of the monitoring component will start a number of additional pods. The \ninstallation will be finished when all those additional pods have started successfully. This \ncommand will report these pods that are not yet in the `Running` or `Completed` states yet.\n\n```bash\noc get po --no-headers=true -A | grep -v 'Running\\|Completed\\|gateway-kong' | grep 'kube-system\\|ibm-common-services\\|management-infrastructure-management\\|management-monitoring\\|management-operations\\|management-security-services'\n```\n\n   Do not move on to the next command until all the addtional pods have completed. Keep \n   repeating the command above until the list comes back empty.\n\n## Patching the Monitoring Deployable Secret\n\n11. Enter the following commands.\n\n```bash\nexport ENTITLED_REGISTRY_DOCKERCONFIG=`oc get secret $ENTITLED_REGISTRY_SECRET -n $CP4MCM_NAMESPACE -o jsonpath='{.data.\\.dockerconfigjson}'`\nexeclog oc patch deployable.app.ibm.com/cnmon-pullsecret-deployable -p `echo {\\\"spec\\\":{\\\"template\\\":{\\\"data\\\":{\\\".dockerconfigjson\\\":\\\"$ENTITLED_REGISTRY_DOCKERCONFIG\\\"}}}}` --type merge -n management-monitoring\n```\n\n## Additional Resources\n* <a href=\"https://www.ibm.com/support/knowledgecenter/en/SSFC4F_2.0.0/install/monitoring_config.html\">IBM Knowledge Center - Cloud Pak for MCM 2.0 Monitoring Configuration</a>\n","fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/cloudpak8s/src/pages/mcm/monitoring/index.mdx"}}}}