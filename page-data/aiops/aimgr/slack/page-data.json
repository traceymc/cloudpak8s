{"componentChunkName":"component---src-pages-aiops-aimgr-slack-index-mdx","path":"/aiops/aimgr/slack/","result":{"pageContext":{"frontmatter":{"title":"Configuring Slack for Watson AIOps AI Manager","keywords":"ibm,cs,cloudpak,watson,aiops,watson-aiops,ai-manager,ai-mgr,slack"},"relativePagePath":"/aiops/aimgr/slack/index.mdx","titleType":"page","MdxNode":{"id":"46e57937-7612-5330-a3a2-862d36286c45","children":[],"parent":"755d1d01-fa4d-5b78-aa1b-21d2439475b0","internal":{"content":"---\ntitle:  Configuring Slack for Watson AIOps AI Manager\nkeywords: 'ibm,cs,cloudpak,watson,aiops,watson-aiops,ai-manager,ai-mgr,slack'\n---\nIn this section we describe the configuration of Slack for Watson AIOps AI Manager on IBM RedHat OpenShift Kubernetes Service (ROKS). \nThis document was written based on our experience configuring Slack for AI Manager on Red Hat OpenShift 4.3 running on x86 architecture.\n\nThese instructions assume that AI manager is installed on a public cloud that can access Slack enterprise servers directly.\n\n## Contact Slack Workspace Administrator\n\nIf you are not the workspace administrator for the target Slack workspace, it will be helpful to find an administrator and give them a heads up that you will be requesting a Slack app for approval. To find the administrators for the workspace, click the **People & user groups** button (might be hidden under More) on the top left.\n\n![](./images/people-user-groups.jpg) \n\nFilter by **Account type = Workspace admins** to find the administrators for the workspace.\n\n![](./images/workspace-filter.jpg)\n\n## Create Slack App\n\nCreate a Slack app, by going to [https://api.slack.com/apps](https://api.slack.com/apps) and clicking **Create New App**. In the pop-up dialog, enter an App Name and specify which Workspace it will be connected to and then click Create App.\n\n![](./images/create-app.jpg)\n\nOn the OAuth & Permissions page, select **Scopes** and verify that the following **Bot Token Scopes** have been added: `app_mentions:read`, `channels:manage`, `groups:write`, `chat:write`, `files:write`, `users:read`, `groups:read`, and `channels:read`.\n\n![](./images/bot-token-scope.jpg)\n\nThe next step is to install the Slack app. If you are not a Slack workspace administrator, then you will need to request to install the Slack app. On the OAuth & Permissions page, scroll to the top section called **OAuth Tokens & Redirect URLs**. Click **Request to Install**. In the pop-up dialog, write a description and click **Submit Request**.\n\nAfter submitting the request to install, a Slack workspace administrator must approve. Until that approval is given, the following is shown for **OAuth Tokens & Redirect URLs**.\n\n![](./images/install-app-request.jpg)\n\nContact a workspace administrator (see instructions above on finding one) to approve. \n\nDuring the approval process, a governance bot may message you in Slack if there are additional processes required for approval.\n\n![](./images/governance.jpg)\n\nFollow any additional processes for your organization and/or workspace.\n\nOnce approval is complete, the OAuth Tokens & Redirect URLs section will display **Install App to Workspace**.\n\n![](./images/oauth-install-app.jpg)\n\nClick **Install App to Workspace**. In the pop-up dialog, review the information and click **Allow**.\n\n![](./images/install-allow.jpg)\n\nThe **Bot User OAuth Access Token** that will be needed to configure the Slack integration in AI Manager is now shown. Copy this token and save it.\n\n![](./images/access-token.jpg)\n\nOn the Basic Information page, select **App Credentials** and note the *Signing Secret* value. Copy this secret and save it. It will also be needed to configure the Slack integration in AI Manager.\n\n![](./images/signing-secret.jpg)\n\n## Define Slack Integration in AI Manager\n\nOpen a new browser tab and log in to AI Manager. If AI Manager is newly installed, you will be prompted to create the ChatOps Integration. Alternatively, select the **Ops integration** tab and create a ChatOps Integration. Fill out the form with the token and secret from above and click **Create Integration**.\n\n![](./images/add-chatops-integration.jpg)\n\nAfter creation, the Ops Integration will be shown with the proper Request URL. Save this URL as it is needed to further configure the Slack app.\n\n![](./images/request-url.jpg)\n\nSample Request URL:\n```\nhttps://zen-cpd-zen.dteaiops0705201-4b4a324f237aea19c5cbc0c3276d4656-0000.us-east.containers.appdomain.cloud/aiops/ibm-aiops---aimgr/instances/1600786907767285/api/slack/events\n```\n\n## Configure Slack App Communications\n\nReturn to the browser tab for the Slack app. Under **Features**, select **Event Subscriptions**. In the Enable Events section, click the slider to enable events. For the **Request URL** field use the Request URL value obtained from AI Manager above. After pasting the value in the field, a “Verified” message should display.\n\n![](./images/enable-events.jpg)\n\nIf the URL verification fails, ensure that SSL certificates are properly configured for AI Manager. Instructions for accomplishing this are in the [installation section titled Updating the Nginx Certificate](../install/#updating-the-nginx-certificate).\n\nOn the **Subcribe to bot events** section, add `app_mention` and `member_joined_channel` events.\n\n![](./images/subscribe-events.jpg)\n\nClick **Save Changes** button.\n\nUnder **Features**, select **Interactivity & Shortcuts**. In the Interactivity section, click the slider to enable interactivity. For the **Request URL** field use the Request URL value obtained from AI Manager above. There is no automatic verification for this form.\n\n![](./images/interactivity.jpg)\n\nClick **Save Changes** button.\n\nNow, configure the welcome slash command. With this command, you can trigger the welcome message again if you closed it. Under *Features*, click **Slash Commands**, then click **Create New Command** to create a new slash command. Use the following values:\n\nCommand: `/waiops-welcome`  \nRequest URL: `<Request URL value obtained from AI Manager above>`  \nShort Description: `Welcome to Watson AIOps`  \n\nNote that the value of the slash command `/waiops-welcome` is hard-coded in AI Manager. However, slash commands are unique within a Slack workspace, so two distinct Slack apps cannot use the same slash command in one workspace. If you are adding an additional AI Manager Slack app to a workspace that already has another AI Manager Slack app, you will need to use a different slash command and reconfigure AI Manager to expect the different slash command.\n\nFor example, if you use `/waiops-aimgr-welcome` as the Command, then you can reconfigure AI Manager using the OpenShift CLI with the command:\n```\noc set env deployment/$(oc get deploy -l app.kubernetes.io/component=chatops-slack-integrator -o jsonpath='{.items[*].metadata.name }') SLACK_WELCOME_COMMAND_NAME=/waiops-aimgr-welcome\n```\n\nAfter filling out the form for the slash command according to your environment, click **Save**.\n\n\nThe Slack app must be reinstalled, as several permissions have changed. Under Settings, go to **Install App** and click **Request to Install** (if you are Slack workspace admin then click Reinstall App). A workspace administrator must approve the re-install due to the permissions changing.\n\nOnce the workspace request is approved, the Slack integration is complete. At this point it is possible to add the Slack app to a channel and test basic communication.\n\n## Configuring Slack Channel\n\nYou can use an existing Slack channel or create a new Slack channel. A sample channel is shown here named `#watson-aiops-aimgr` and is made private (invitation only).\n\n![](./images/create-channel.jpg)\n\nCapture the channel ID by right-clicking on the channel name, the select **Copy Link** to get the web URL link. The last part of the link is the channel ID, starting with C for public channels or G for private channels.\n\nExample: `https://watsonaiforit.slack.com/archives/G017SA7NQ9L`\n\nChannel ID for example above is `G017SA7NQ9L`. Save this ID to use for further configuration in AI Manager.\n\n## Configuring an Application Group with a Slack Channel\n\nSwitch back to AI Manager in your browser. On the instance page, click **Create new application group**. Name the application group and set the **Platform channel ID** to the value of your Slack channel ID saved earlier.\n\n![](./images/new-app-grp.jpg)\n\nClick **Save application group**. Now all the applications added to this application group will target the Slack channel created earlier.\n\n## Invite the Slack app to the Channel\n\nAt this point it is possible to add the Slack app to a channel and test basic communication. Open the Slack channel created previously and tag the application in a message.\n\n![](./images/tag-app.jpg)\n\nA dialog will display allowing an invitation to the Slack app.\n\n![](./images/app-invite.jpg)\n\nClick **Invite to Channel**.\n\nThe Slack app will send a message to the channel.\n\n![](./images/app-hey.jpg)\n\nYou can also show the welcome message any time by using the slash command configured for the Slack app.\n\n![](./images/slash-output.jpg)\n\nCongratulations, you have configured a Slack app for communication with AI Manager!\n\n","type":"Mdx","contentDigest":"ce29722a6f17ebc47cb0e054283f87a7","counter":615,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Configuring Slack for Watson AIOps AI Manager","keywords":"ibm,cs,cloudpak,watson,aiops,watson-aiops,ai-manager,ai-mgr,slack"},"exports":{},"rawBody":"---\ntitle:  Configuring Slack for Watson AIOps AI Manager\nkeywords: 'ibm,cs,cloudpak,watson,aiops,watson-aiops,ai-manager,ai-mgr,slack'\n---\nIn this section we describe the configuration of Slack for Watson AIOps AI Manager on IBM RedHat OpenShift Kubernetes Service (ROKS). \nThis document was written based on our experience configuring Slack for AI Manager on Red Hat OpenShift 4.3 running on x86 architecture.\n\nThese instructions assume that AI manager is installed on a public cloud that can access Slack enterprise servers directly.\n\n## Contact Slack Workspace Administrator\n\nIf you are not the workspace administrator for the target Slack workspace, it will be helpful to find an administrator and give them a heads up that you will be requesting a Slack app for approval. To find the administrators for the workspace, click the **People & user groups** button (might be hidden under More) on the top left.\n\n![](./images/people-user-groups.jpg) \n\nFilter by **Account type = Workspace admins** to find the administrators for the workspace.\n\n![](./images/workspace-filter.jpg)\n\n## Create Slack App\n\nCreate a Slack app, by going to [https://api.slack.com/apps](https://api.slack.com/apps) and clicking **Create New App**. In the pop-up dialog, enter an App Name and specify which Workspace it will be connected to and then click Create App.\n\n![](./images/create-app.jpg)\n\nOn the OAuth & Permissions page, select **Scopes** and verify that the following **Bot Token Scopes** have been added: `app_mentions:read`, `channels:manage`, `groups:write`, `chat:write`, `files:write`, `users:read`, `groups:read`, and `channels:read`.\n\n![](./images/bot-token-scope.jpg)\n\nThe next step is to install the Slack app. If you are not a Slack workspace administrator, then you will need to request to install the Slack app. On the OAuth & Permissions page, scroll to the top section called **OAuth Tokens & Redirect URLs**. Click **Request to Install**. In the pop-up dialog, write a description and click **Submit Request**.\n\nAfter submitting the request to install, a Slack workspace administrator must approve. Until that approval is given, the following is shown for **OAuth Tokens & Redirect URLs**.\n\n![](./images/install-app-request.jpg)\n\nContact a workspace administrator (see instructions above on finding one) to approve. \n\nDuring the approval process, a governance bot may message you in Slack if there are additional processes required for approval.\n\n![](./images/governance.jpg)\n\nFollow any additional processes for your organization and/or workspace.\n\nOnce approval is complete, the OAuth Tokens & Redirect URLs section will display **Install App to Workspace**.\n\n![](./images/oauth-install-app.jpg)\n\nClick **Install App to Workspace**. In the pop-up dialog, review the information and click **Allow**.\n\n![](./images/install-allow.jpg)\n\nThe **Bot User OAuth Access Token** that will be needed to configure the Slack integration in AI Manager is now shown. Copy this token and save it.\n\n![](./images/access-token.jpg)\n\nOn the Basic Information page, select **App Credentials** and note the *Signing Secret* value. Copy this secret and save it. It will also be needed to configure the Slack integration in AI Manager.\n\n![](./images/signing-secret.jpg)\n\n## Define Slack Integration in AI Manager\n\nOpen a new browser tab and log in to AI Manager. If AI Manager is newly installed, you will be prompted to create the ChatOps Integration. Alternatively, select the **Ops integration** tab and create a ChatOps Integration. Fill out the form with the token and secret from above and click **Create Integration**.\n\n![](./images/add-chatops-integration.jpg)\n\nAfter creation, the Ops Integration will be shown with the proper Request URL. Save this URL as it is needed to further configure the Slack app.\n\n![](./images/request-url.jpg)\n\nSample Request URL:\n```\nhttps://zen-cpd-zen.dteaiops0705201-4b4a324f237aea19c5cbc0c3276d4656-0000.us-east.containers.appdomain.cloud/aiops/ibm-aiops---aimgr/instances/1600786907767285/api/slack/events\n```\n\n## Configure Slack App Communications\n\nReturn to the browser tab for the Slack app. Under **Features**, select **Event Subscriptions**. In the Enable Events section, click the slider to enable events. For the **Request URL** field use the Request URL value obtained from AI Manager above. After pasting the value in the field, a “Verified” message should display.\n\n![](./images/enable-events.jpg)\n\nIf the URL verification fails, ensure that SSL certificates are properly configured for AI Manager. Instructions for accomplishing this are in the [installation section titled Updating the Nginx Certificate](../install/#updating-the-nginx-certificate).\n\nOn the **Subcribe to bot events** section, add `app_mention` and `member_joined_channel` events.\n\n![](./images/subscribe-events.jpg)\n\nClick **Save Changes** button.\n\nUnder **Features**, select **Interactivity & Shortcuts**. In the Interactivity section, click the slider to enable interactivity. For the **Request URL** field use the Request URL value obtained from AI Manager above. There is no automatic verification for this form.\n\n![](./images/interactivity.jpg)\n\nClick **Save Changes** button.\n\nNow, configure the welcome slash command. With this command, you can trigger the welcome message again if you closed it. Under *Features*, click **Slash Commands**, then click **Create New Command** to create a new slash command. Use the following values:\n\nCommand: `/waiops-welcome`  \nRequest URL: `<Request URL value obtained from AI Manager above>`  \nShort Description: `Welcome to Watson AIOps`  \n\nNote that the value of the slash command `/waiops-welcome` is hard-coded in AI Manager. However, slash commands are unique within a Slack workspace, so two distinct Slack apps cannot use the same slash command in one workspace. If you are adding an additional AI Manager Slack app to a workspace that already has another AI Manager Slack app, you will need to use a different slash command and reconfigure AI Manager to expect the different slash command.\n\nFor example, if you use `/waiops-aimgr-welcome` as the Command, then you can reconfigure AI Manager using the OpenShift CLI with the command:\n```\noc set env deployment/$(oc get deploy -l app.kubernetes.io/component=chatops-slack-integrator -o jsonpath='{.items[*].metadata.name }') SLACK_WELCOME_COMMAND_NAME=/waiops-aimgr-welcome\n```\n\nAfter filling out the form for the slash command according to your environment, click **Save**.\n\n\nThe Slack app must be reinstalled, as several permissions have changed. Under Settings, go to **Install App** and click **Request to Install** (if you are Slack workspace admin then click Reinstall App). A workspace administrator must approve the re-install due to the permissions changing.\n\nOnce the workspace request is approved, the Slack integration is complete. At this point it is possible to add the Slack app to a channel and test basic communication.\n\n## Configuring Slack Channel\n\nYou can use an existing Slack channel or create a new Slack channel. A sample channel is shown here named `#watson-aiops-aimgr` and is made private (invitation only).\n\n![](./images/create-channel.jpg)\n\nCapture the channel ID by right-clicking on the channel name, the select **Copy Link** to get the web URL link. The last part of the link is the channel ID, starting with C for public channels or G for private channels.\n\nExample: `https://watsonaiforit.slack.com/archives/G017SA7NQ9L`\n\nChannel ID for example above is `G017SA7NQ9L`. Save this ID to use for further configuration in AI Manager.\n\n## Configuring an Application Group with a Slack Channel\n\nSwitch back to AI Manager in your browser. On the instance page, click **Create new application group**. Name the application group and set the **Platform channel ID** to the value of your Slack channel ID saved earlier.\n\n![](./images/new-app-grp.jpg)\n\nClick **Save application group**. Now all the applications added to this application group will target the Slack channel created earlier.\n\n## Invite the Slack app to the Channel\n\nAt this point it is possible to add the Slack app to a channel and test basic communication. Open the Slack channel created previously and tag the application in a message.\n\n![](./images/tag-app.jpg)\n\nA dialog will display allowing an invitation to the Slack app.\n\n![](./images/app-invite.jpg)\n\nClick **Invite to Channel**.\n\nThe Slack app will send a message to the channel.\n\n![](./images/app-hey.jpg)\n\nYou can also show the welcome message any time by using the slash command configured for the Slack app.\n\n![](./images/slash-output.jpg)\n\nCongratulations, you have configured a Slack app for communication with AI Manager!\n\n","fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/cloudpak8s/src/pages/aiops/aimgr/slack/index.mdx"}}}}